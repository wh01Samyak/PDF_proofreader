/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.ocr_proofreader;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;
import org.icepdf.ri.common.ComponentKeyBinding;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;

/**
 *
 * @author samyak
 */
public class OCR_ProofreaderUI extends javax.swing.JFrame {

    /**
     * Creates new form OCR_ProofreaderUI
     */
    public OCR_ProofreaderUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar = new javax.swing.JPanel();
        imageFormPDF = new javax.swing.JPanel();
        uploadDocumentsImage = new javax.swing.JButton();
        IUploadConfirmation = new javax.swing.JLabel();
        editableFormPDF = new javax.swing.JPanel();
        uploadDocumentsEditable = new javax.swing.JButton();
        EUploadConfirmation = new javax.swing.JLabel();
        errorLog = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuBar.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu bar"));
        menuBar.setName(""); // NOI18N

        javax.swing.GroupLayout menuBarLayout = new javax.swing.GroupLayout(menuBar);
        menuBar.setLayout(menuBarLayout);
        menuBarLayout.setHorizontalGroup(
            menuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        menuBarLayout.setVerticalGroup(
            menuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );

        imageFormPDF.setBorder(javax.swing.BorderFactory.createTitledBorder("Image-form PDF"));

        uploadDocumentsImage.setText("Upload document");
        uploadDocumentsImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadDocumentsImageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout imageFormPDFLayout = new javax.swing.GroupLayout(imageFormPDF);
        imageFormPDF.setLayout(imageFormPDFLayout);
        imageFormPDFLayout.setHorizontalGroup(
            imageFormPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imageFormPDFLayout.createSequentialGroup()
                .addGroup(imageFormPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(imageFormPDFLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(uploadDocumentsImage))
                    .addGroup(imageFormPDFLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(IUploadConfirmation)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        imageFormPDFLayout.setVerticalGroup(
            imageFormPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imageFormPDFLayout.createSequentialGroup()
                .addContainerGap(142, Short.MAX_VALUE)
                .addComponent(uploadDocumentsImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IUploadConfirmation)
                .addGap(113, 113, 113))
        );

        uploadDocumentsImage.getAccessibleContext().setAccessibleName("Upload document(i)");
        IUploadConfirmation.getAccessibleContext().setAccessibleName("IUploadConfirmation");

        editableFormPDF.setBorder(javax.swing.BorderFactory.createTitledBorder("Editable-form PDF"));

        uploadDocumentsEditable.setText("Upload document");
        uploadDocumentsEditable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadDocumentsEditableMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout editableFormPDFLayout = new javax.swing.GroupLayout(editableFormPDF);
        editableFormPDF.setLayout(editableFormPDFLayout);
        editableFormPDFLayout.setHorizontalGroup(
            editableFormPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editableFormPDFLayout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addComponent(uploadDocumentsEditable)
                .addGap(78, 78, 78))
            .addGroup(editableFormPDFLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(EUploadConfirmation)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        editableFormPDFLayout.setVerticalGroup(
            editableFormPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editableFormPDFLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(uploadDocumentsEditable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EUploadConfirmation)
                .addGap(112, 112, 112))
        );

        uploadDocumentsEditable.getAccessibleContext().setAccessibleName("Upload document(e)");
        EUploadConfirmation.getAccessibleContext().setAccessibleName("EUploadConfirmation");

        errorLog.setBorder(javax.swing.BorderFactory.createTitledBorder("Error Log"));

        javax.swing.GroupLayout errorLogLayout = new javax.swing.GroupLayout(errorLog);
        errorLog.setLayout(errorLogLayout);
        errorLogLayout.setHorizontalGroup(
            errorLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 190, Short.MAX_VALUE)
        );
        errorLogLayout.setVerticalGroup(
            errorLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imageFormPDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editableFormPDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(errorLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(imageFormPDF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editableFormPDF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(errorLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uploadDocumentsImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadDocumentsImageMouseClicked
        // TODO add your handling code here:
        JFileChooser j = new JFileChooser(FileSystemView.getFileSystemView());
        j.showOpenDialog(null);
        IUploadConfirmation.setText(j.getSelectedFile().toString()+" uploaded successfully");
        File myFile = new File(j.getSelectedFile().toString());
        System.out.println(j.getSelectedFile().toString());
        openPdf(j.getSelectedFile().toString());
    }//GEN-LAST:event_uploadDocumentsImageMouseClicked

    private void uploadDocumentsEditableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadDocumentsEditableMouseClicked
        // TODO add your handling code here:
        JFileChooser j = new JFileChooser(FileSystemView.getFileSystemView());
        j.showOpenDialog(null);
        EUploadConfirmation.setText(j.getSelectedFile().toString()+" uploaded successfully");
    }//GEN-LAST:event_uploadDocumentsEditableMouseClicked

    void openPdf(String file){
        
        try{
            imageFormPDF.removeAll();
            // build a controller
            System.out.println("Hii 1");
            SwingController controller = new SwingController();
            System.out.println("Hii 2");
            // Build a SwingViewFactory configured with the controller
            SwingViewBuilder factory = new SwingViewBuilder(controller);
            System.out.println("Hii 3");
            // Use the factory to build a JPanel that is pre-configured
            //with a complete, active Viewer UI.
            imageFormPDF = factory.buildViewerPanel();
            System.out.println("Hii 4");
            // add copy keyboard command
            ComponentKeyBinding.install(controller, imageFormPDF);
            System.out.println("Hii 5");
            // add interactive mouse link annotation support via callback
            controller.getDocumentViewController().setAnnotationCallback(
                    new org.icepdf.ri.common.MyAnnotationCallback(
                            controller.getDocumentViewController()));

            System.out.println("Hii 6");
            // Open a PDF document to view
            controller.openDocument(file);
            System.out.println("Hii 7");
            
        } catch (Exception ex){
            
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OCR_ProofreaderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OCR_ProofreaderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OCR_ProofreaderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OCR_ProofreaderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OCR_ProofreaderUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EUploadConfirmation;
    private javax.swing.JLabel IUploadConfirmation;
    private javax.swing.JPanel editableFormPDF;
    private javax.swing.JPanel errorLog;
    private javax.swing.JPanel imageFormPDF;
    private javax.swing.JPanel menuBar;
    private javax.swing.JButton uploadDocumentsEditable;
    private javax.swing.JButton uploadDocumentsImage;
    // End of variables declaration//GEN-END:variables
}
